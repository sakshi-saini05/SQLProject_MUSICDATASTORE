create database music_database;

-- 1 WHO IS THE SENIOR MOST EMPLOYEE BASED ON JOB TITLE?
SELECT * FROM EMPLOYEE ORDER BY LEVELS  DESC LIMIT 1;


-- 2 WHICH COUNTRIES HAVING THE MOST INVOICES?
SELECT * FROM INVOICE;
SELECT COUNT(INVOICE_ID) AS TOTAL_INVOICES,BILLING_COUNTRY FROM INVOICE GROUP BY BILLING_COUNTRY ORDER BY COUNT(INVOICE_ID) DESC;

-- 3 WHAT ARE THE TOP 3 VALUES OF TOTAL INVOICES
SELECT TOTAL FROM INVOICE ORDER BY TOTAL DESC LIMIT 3;

/* 4 WHICH CITY HAS THE BEST CUSTOMERS?
WE WOULD LIKE TO THROW THE PROMOTIONAL MUSIC FESTIVAL IN THE CITY WE MADE THE MOST MONEY.
 WRITE A QUERY THAT RETURN ONE CITY THAT HAS THE HIGHEST SUM OF INVOICE TOTALS.
 RETURN BOTH THE CITY NAME & SUM OF ALL INVOICE TOTALS*/

SELECT SUM(TOTAL) AS INVOICE_TOTALS,billing_city FROM INVOICE GROUP BY billing_city ORDER BY SUM(TOTAL) DESC LIMIT 1;
SELECT * FROM INVOICE;



/* 5 WHO IS HE BEST CUSTOMER ? 
THE CUSTOMER WHO HAS SPENT THE MOST MONEY WILL BE DECLARED AS THE BEST CUSTOMER.
 WRITE A QUERY THAT RETURNS THE PERSON WHO HAS SPENT THE MOST MONEY?*/
 
 
 SELECT CUSTOMER.CUSTOMER_ID ,SUM(INVOICE.TOTAL) AS TOTAL FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID=INVOICE.CUSTOMER_ID
GROUP BY CUSTOMER.CUSTOMER_ID ORDER BY TOTAL DESC LIMIT 1;


/* 6 WRITE QUERY TO RETURN THE EMAIL,FIRST NAME, LAST NAME & GENRE OF ALL ROCK MUSIC LISTENERS.
RETURN YOUR LIST ALHPABETCALLY BY EMAIL STARTING WITH A */

SELECT DISTINCT EMAIL,FIRST_NAME,LAST_NAME FROM CUSTOMER
JOIN INVOICE ON CUSTOMER.CUSTOMER_ID=INVOICE.CUSTOMER_ID
JOIN INVOICE_LINE ON INVOICE.INVOICE_ID=INVOICE_LINE.INVOICE_ID
WHERE TRACK_ID IN(
SELECT TRACK_ID FROM TRACK JOIN GENRE ON TRACK.GENRE_ID=GENRE.GENRE_ID
WHERE GENRE.NAME LIKE 'ROCK')
ORDER BY EMAIL;


/* 7 RETURN ALL THE TRACK NAMES THAT HAVE A SONG LENGTH LONGER THAN THE AVERAGE SONG LENGTH.
RETURN THE NAME AND MILISECONDS FOR EACH TRACK.
ORDER BY SONG LENGTH WITH THE LONGEST SONGS LISTED FIRST*/

 SELECT NAME,MILLISECONDS FROM TRACK WHERE MILLISECONDS>(SELECT AVG(MILLISECONDS) FROM TRACK)
 ORDER BY MILLISECONDS DESC;
 








